import Campeon.*
import Oleada.*
import Items.*

describe "Liga De Leyendas" {
	//campeones
	const campeon01 			= 	new Campeon(puntosDeVida=50, puntosDeAtaque=15, cantidadDeDinero=1450)
	//oleadas
	const oleada01				=	new Oleada(cantidadDeMinions=10, plus=25)
<<<<<<< HEAD
	const oleada02              =   new Oleada(cantidadDeMinions=20, plus=10)
	const oleada03              =   new Oleada(cantidadDeMinions=30, plus=15)
=======
	const oleada02				=   new Oleada(cantidadDeMinions=500, plus= 100)
>>>>>>> branch 'master' of https://github.com/obj1unq-2018s2/tp-cuatrimestral-jardon-solanes-cavodeassi.git
	//items
	const anilloDeDoran         =   new AnilloDeDoran()
	const tomoAmplificador      =   new TomoAmplificador()
	const sombreroDeRabadon		=	new SombreroDeRabadon()
	const posionDeVida			=	new	PosionDeVida()

	fixture {
		campeon01.comprarItem(anilloDeDoran)
		campeon01.comprarItem(tomoAmplificador)
		campeon01.comprarItem(sombreroDeRabadon)
		campeon01.comprarItem(posionDeVida)
	}
	
	//Tests Parte 2
	
	test "el campeon ataca a la oleada y la mata" {
		campeon01.atacarA(oleada01)
		assert.that(oleada01.estaMuerto())
		assert.equals(10,campeon01.cantidadDeDinero())
	}
	
	test"el campeon ataca a oleada y muere primero"{
		campeon01.atacarA(oleada02)  				//gasta bloqueo 1
		assert.equals(10,campeon01.puntosDeDanio()) //danio recibido al equipar anillo y sombrero
		campeon01.atacarA(oleada02)  				//gasta bloqueo 2
		assert.equals(10,campeon01.puntosDeDanio())
		campeon01.atacarA(oleada02)  				//gasta bloqueo 3
		assert.equals(10,campeon01.puntosDeDanio())
		campeon01.atacarA(oleada02)  				//gasta bloqueo 4
		assert.equals(358,oleada02.danio())
		assert.equals(242,campeon01.cantidadDeDinero())
		campeon01.atacarA(oleada02)
		assert.that(campeon01.estaMuerto())			//campeon muerto 
		assert.equals(368,campeon01.puntosDeDanio())//danio de oleada + danio que tenia el campeon
		assert.equals(320.4,campeon01.cantidadDeDinero())//sumo el oro al atacar por ultima vez.
		assert.notThat(oleada02.estaMuerto())
	}
	
	test "el campeon se quedo sin un mango" {
		assert.equals(0,campeon01.cantidadDeDinero())
	}
	
	test "el campeon tiene 4 items en su inventario/equipados" {
		assert.equals(4,campeon01.inventario().size())
	}
	
	test "el campeon vende todos los items" {
		campeon01.venderItem(anilloDeDoran)
		campeon01.venderItem(tomoAmplificador)
		campeon01.venderItem(sombreroDeRabadon)
		campeon01.venderItem(posionDeVida)
		assert.equals(725,campeon01.cantidadDeDinero())
		assert.equals([],campeon01.inventario())
	}
	
	test "el campeon juega con las habilidades activables de sus items" {
		assert.that(tomoAmplificador.puedeActivarHab(campeon01))
		tomoAmplificador.activarHabilidad(campeon01)
		assert.equals(500,campeon01.cantidadDeDinero())
		assert.notThat(tomoAmplificador.puedeActivarHab(campeon01))
		assert.notThat(sombreroDeRabadon.puedeActivarHab(campeon01))
		assert.equals(10,campeon01.puntosDeDanio())
		assert.that(posionDeVida.puedeActivarHab(campeon01))
		posionDeVida.activarHabilidad(campeon01)
		assert.that(posionDeVida.puedeActivarHab(campeon01))
		posionDeVida.activarHabilidad(campeon01)
		assert.notThat(posionDeVida.puedeActivarHab(campeon01))
		assert.equals(0,campeon01.puntosDeDanio())
	}
	
	test "el campeon ataca a dos oleadas y se queda con 30 de dinero" {
		campeon01.atacarA(oleada01)
		campeon01.atacarA(oleada02)
		assert.equals(campeon01.cantidadDeDinero(), 30)
	}
	
	test "el campeon ataca y queda con 120 de vida y 60 de dinero" {
		campeon01.atacarA(oleada01)
		campeon01.atacarA(oleada02)
		campeon01.atacarA(oleada03)
		assert.notThat(campeon01.estaMuerto())
		assert.equals(0, oleada01.cantidadDeMinions())
		assert.equals(0, oleada02.cantidadDeMinions())
		assert.equals(0, oleada03.cantidadDeMinions())
		assert.equals(120, campeon01.vida())
		assert.equals(campeon01.cantidadDeDinero(), 60)
	}
	
	test "el campeon de desequipa los items pelea contra dos oleadas y muere"{
		campeon01.desequiparItem(anilloDeDoran)
		campeon01.desequiparItem(tomoAmplificador)
		campeon01.desequiparItem(sombreroDeRabadon)
		campeon01.desequiparItem(posionDeVida)
		assert.equals(50, campeon01.vida())
		campeon01.atacarA(oleada02)
		campeon01.atacarA(oleada03)
		assert.that(campeon01.estaMuerto())
	}

}