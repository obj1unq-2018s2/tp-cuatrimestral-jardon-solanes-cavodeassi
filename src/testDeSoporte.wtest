import Campeon.*
import Items.*
import Oleada.*
import soporte.*

describe "Test para Soporte" {
		//campeones
	const draven= new Campeon(puntosDeVida = 150, puntosDeAtaque = 25 , cantidadDeDinero = 1000)
	const maokai= new Campeon(puntosDeVida = 150, puntosDeAtaque = 25 , cantidadDeDinero = 1000)
		//soporte
	const janna=  new Soporte(puntosDeVida = 150, puntosDeAtaque =25 , cantidadDeDinero = 100, 
		campeonVinculado=0 /*valor para inicializar la variable */)
		//oleada
	const oleada= new Oleada(cantidadDeMinions = 100, plus = 0)
	
	//items
	const tomo= new TomoAmplificador()
	const posion= new PosionDeVida()
	
	
	test "Comportamiento de campeones vinculados a Janna" {
		//Draven
		
		janna.vincular(draven)
		assert.equals( janna.campeonVinculado(), draven )
		assert.equals(1000,draven.cantidadDeDinero())
		draven.atacarA(oleada)
		assert.equals(75,oleada.cantidadDeMinions())
		assert.equals(100,draven.puntosDeDanio())
		assert.equals(1025,draven.cantidadDeDinero())
		janna.atacarA(oleada)
		assert.equals(50,oleada.cantidadDeMinions())
		assert.equals(90,draven.puntosDeDanio())
		
		//Maokai
		janna.vincular(maokai)
		assert.equals(50,oleada.cantidadDeMinions())
		maokai.atacarA(oleada)
		assert.equals(50,maokai.puntosDeDanio())
		assert.equals(25,oleada.cantidadDeMinions())
		janna.atacarA(oleada)
		assert.equals(40,maokai.puntosDeDanio())
		assert.equals(1025,maokai.cantidadDeDinero())
		maokai.comprarItem(tomo)		
		assert.equals(525,maokai.cantidadDeDinero())
		janna.comprarItem(posion)
		assert.equals(100,janna.cantidadDeDinero())
		assert.that(janna.inventario().contains(tomo))
		assert.that(janna.inventario().contains(posion))
		
		assert.equals(true,oleada.estaMuerto())//oleada muerta
		
	}
	
	
}